
# Get Azure Pipelines free plan
# Visit https://azure.microsoft.com/en-us/services/devops/pipelines/

trigger:
  - master

# Ensure this is the same as in build.gradle
#variables:
#  appPackaging: fxapp

jobs:

# Java Tool Installer
# Acquires a specific version of Java from a user supplied Azure blob or the tools cache and sets JAVA_HOME. Use this task to change the version of Java used in Java tasks.
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '8' 
    jdkArchitectureOption: # Options: x64, x86
    jdkSourceOption: # Options: azureStorage, localDirectory
    #jdkFile: # Required when jdkSourceOption == LocalDirectory
    #azureResourceManagerEndpoint: # Required when jdkSourceOption == AzureStorage
    #azureStorageAccountName: # Required when jdkSourceOption == AzureStorage
    #azureContainerName: # Required when jdkSourceOption == AzureStorage
    #azureCommonVirtualFile: # Required when jdkSourceOption == AzureStorage
    jdkDestinationDirectory: 
    #cleanDestinationDirectory: true 
# Java Tool Installer
# Acquires a specific version of Java from a user supplied Azure blob or the tools cache and sets JAVA_HOME. Use this task to change the version of Java used in Java tasks.
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '11' 
    jdkArchitectureOption: # Options: x64, x86
    jdkSourceOption: # Options: azureStorage, localDirectory
    #jdkFile: # Required when jdkSourceOption == LocalDirectory
    #azureResourceManagerEndpoint: # Required when jdkSourceOption == AzureStorage
    #azureStorageAccountName: # Required when jdkSourceOption == AzureStorage
    #azureContainerName: # Required when jdkSourceOption == AzureStorage
    #azureCommonVirtualFile: # Required when jdkSourceOption == AzureStorage
    jdkDestinationDirectory: 
    #cleanDestinationDirectory: true     
# Java Tool Installer
# Acquires a specific version of Java from a user supplied Azure blob or the tools cache and sets JAVA_HOME. Use this task to change the version of Java used in Java tasks.
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '12' 
    jdkArchitectureOption: # Options: x64, x86
    jdkSourceOption: # Options: azureStorage, localDirectory
    #jdkFile: # Required when jdkSourceOption == LocalDirectory
    #azureResourceManagerEndpoint: # Required when jdkSourceOption == AzureStorage
    #azureStorageAccountName: # Required when jdkSourceOption == AzureStorage
    #azureContainerName: # Required when jdkSourceOption == AzureStorage
    #azureCommonVirtualFile: # Required when jdkSourceOption == AzureStorage
    jdkDestinationDirectory: 
    #cleanDestinationDirectory: true     

  # Linux job
  - template: ./build-job.yml
    parameters:
      name: Linux_JDK_8
      platform: linux
      jdkVersion: 1.8
      pool:
        vmImage: 'ubuntu-16.04'   
  - template: ./build-job.yml
    parameters:
      name: Linux_JDK_11
      platform: linux
      jdkVersion: 1.11
      pool:
        vmImage: 'ubuntu-16.04'
  - template: ./build-job.yml
    parameters:
      name: Linux_JDK_12
      platform: linux
      jdkVersion: 1.12
      pool:
        vmImage: 'ubuntu-16.04'      

  # Mac OS job
  - template: ./build-job.yml
    parameters:
      name: MacOS_JDK_8
      platform: mac
      jdkVersion: 1.8
      pool:
        vmImage: 'macOS-10.13'    
  - template: ./build-job.yml
    parameters:
      name: MacOS_JDK_11
      platform: mac
      jdkVersion: 1.11
      pool:
        vmImage: 'macOS-10.13'
  - template: ./build-job.yml
    parameters:
      name: MacOS_JDK_12
      platform: mac
      jdkVersion: 1.12
      pool:
        vmImage: 'macOS-10.13'      

  # Windows job
  - template: ./build-job.yml
    parameters:
      name: Windows_JDK_8
      platform: win
      jdkVersion: 1.8
      pool:
        vmImage: 'windows-2019'  
  - template: ./build-job.yml
    parameters:
      name: Windows_JDK_11
      platform: win
      jdkVersion: 1.11
      pool:
        vmImage: 'windows-2019'
  - template: ./build-job.yml
    parameters:
      name: Windows_JDK_12
      platform: win
      jdkVersion: 1.12
      pool:
        vmImage: 'windows-2019'        
